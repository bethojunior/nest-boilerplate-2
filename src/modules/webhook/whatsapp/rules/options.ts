import { Injectable } from '@nestjs/common';

@Injectable()
export class Options {
  private readonly message: string;
  private readonly appName: string;
  private readonly customer: {
      phone: string,
      name: string,
  };

  constructor(props: any) {
    this.appName = props.appName || '704Apps';
    this.message = props.message;
    this.customer = {
      phone: props.customer.phone,
      name: props.customer.name,
    };
  }

  async handle() 
  {
    const messageContent = `*Ol√° ${this.customer.name}*! \n\n *Escolha uma das op√ß√µes abaixo para iniciar o atendimento no ${this.appName}:*`;
    const options = {
      '1': 'üöó Chamar uma corrida',
      '2': '‚ùå Cancelar corrida',
    };

    const formattedOptions = Object.entries(options)
      .map(([key, text]) => `*${key}.* ${text}`)
      .join('\n');

    return `${messageContent}\n\n${formattedOptions}`
  }

  async handleOption() {
    switch (this.message) {
      case '1':
        return {
          message:
            'üöó √ìtimo! Vamos iniciar sua corrida. Por favor, informe seu *nome completo*:',
        };

      case '2':
        return {
          message:
            '‚ùå Tudo bem. Sua corrida ser√° cancelada. Confirme com *SIM* ou *N√ÉO*.',
        };

      default:
        return {
          message:
            '‚ùó Op√ß√£o inv√°lida. Por favor, escolha uma das op√ß√µes enviando apenas o n√∫mero (1 ou 2).',
        };
    }
  }


  async notAvailable() {
    const messageContent = `*Opss..! Selecione uma op√ß√£o v√°lida ${this.appName}:*`;
    return messageContent
  }
}
